import asyncio
import logging
from dotenv import load_dotenv
import os

from aiogram import Bot, Dispatcher, F, Router, types
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import (
    LabeledPrice,
    PreCheckoutQuery,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    InputMediaPhoto,
)
from aiogram.client.default import DefaultBotProperties

load_dotenv()

API_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

prices = [LabeledPrice(label="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç ‚≠êÔ∏è", amount=1)]

START_PHOTO_URL = os.getenv("PHOTO_START")
ABOUT_PHOTO_URL = os.getenv("PHOTO_INFO")
HELP_PHOTO_URL = os.getenv("PHOTO_HELP")
DONATE_PHOTO_URL = os.getenv("PHOTO_DONATE")
THANKS_PHOTO_URL = os.getenv("PHOTO_THANKS")
ERROR_PHOTO_URL = os.getenv("PHOTO_ERROR")

SAPPORT_URL = os.getenv("SUPPORT_URL")

def start_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", url="https://t.me/your_app?start=miniapp")],
        [InlineKeyboardButton(text="–û –Ω–∞—Å", callback_data="about"),
        InlineKeyboardButton(text="–ü–æ–º–æ—â—å", callback_data="help")],
        [InlineKeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç ‚≠êÔ∏è", callback_data="pay")],
    ])

back_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
])


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await bot.delete_webhook(drop_pending_updates=True)
    await message.answer_photo(
        photo=START_PHOTO_URL,
        caption=(f"–ü—Ä–∏–≤–µ—Ç, <b>User</b>! üëã\n\n"
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Capybara Marketplace\n\n"
        f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã, "
        f"–æ–±—â–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.\n\n"
        f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"),
        reply_markup=start_keyboard()
    )


@dp.callback_query(F.data == "about")
async def callback_about(query: types.CallbackQuery):
    await query.message.edit_media(
        media=InputMediaPhoto(
            media=ABOUT_PHOTO_URL,
            caption=(
        f"<b>–†–∞—Å—Å–∫–∞–∂—É –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–æ —Å–µ—Ä–≤–∏—Å Capybara Marketplace</b>\n\n"
        f"Capybara Marketplace ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —É–¥–æ–±–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ Telegram.\n"
        f"–ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –¥–µ—Å—è—Ç–∫–∞—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≥—Ä—É–ø–ø –∏ —á–∞—Ç–∞—Ö ‚Äî –º—ã —Å–æ–±—Ä–∞–ª–∏ –≤—Å–µ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.\n\n"
        
        f"üë• –£–∂–µ –±–æ–ª–µ–µ –•–•–•–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º.\n"
        f"üìà –£ –Ω–∞—Å –±–æ–ª–µ–µ –•–•–•–• –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –•–•–• —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö.\n"
        f"üèò –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –≤ –•–•–•–• –≥–æ—Ä–æ–¥–∞—Ö –ê—Ä–≥–µ–Ω—Ç–∏–Ω—ã.\n\n"
        
        f"–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —É–¥–æ–±–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∫–∞–∫ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π, —Ç–∞–∫ –∏ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤.\n"
        f"–¶–µ–Ω–∏ —Å–≤–æ–µ –≤—Ä–µ–º—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ —Å –ø–æ–ª—å–∑–æ–π.\n\n"
        
        f"–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º <a href='{SAPPORT_URL}'>–ö–æ–º–∞–Ω–¥–∞ Capybara</a>"
    )
        ),
        reply_markup=back_kb
    )
    await query.answer()


@dp.callback_query(F.data == "help")
async def callback_help(query: types.CallbackQuery):
    await query.message.edit_media(
        media=InputMediaPhoto(
            media=HELP_PHOTO_URL,
            caption=(
        "üîç <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Capybara</b>\n\n"
        "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ Capybara Marketplace –≤–∞–º –Ω–µ –Ω—É–∂–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –í—Å–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ ‚Äî —ç—Ç–æ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –ø–æ–∫—É–ø–∫–∞–º–∏ –∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏.\n"
        "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ Telegram –∏ –Ω–µ —Ö—Ä–∞–Ω–∏–º –Ω–∏–∫–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—Å.\n"
        "–ú—ã –ø—Ä–∏–º–µ–Ω—è–µ–º —Å–∏—Å—Ç–µ–º—É —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤, –ø–æ—ç—Ç–æ–º—É –≤—ã –º–æ–∂–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ —Ü–µ–Ω–µ, –Ω–æ –∏ –æ–±—Ä–∞—â–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤, —á—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –≤–∞—à—É –ø–æ–∫—É–ø–∫—É –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π.\n"
        "–ê —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –º—ã —ç–∫–æ–Ω–æ–º–∏–º –≤–∞—à–µ –≤—Ä–µ–º—è –Ω–∞ –ø–æ–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
        
        "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ\n\n"
        f"–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º <a href='{SAPPORT_URL}'>–ö–æ–º–∞–Ω–¥–∞ Capybara</a>"
    )
        ),
        reply_markup=back_kb
    )
    await query.answer()


@dp.callback_query(F.data == "pay")
async def callback_pay(query: types.CallbackQuery):
    await bot.send_invoice(
        chat_id=query.message.chat.id,
        title="–î–æ–Ω–∞—Ç –ø—Ä–æ–µ–∫—Ç—É",
        description="–í—Å–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ–π–¥—É—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ!",
        payload="donate_payload",
        provider_token="",  
        currency="XTR",
        prices=prices,
    )
    await query.answer()


@dp.pre_checkout_query(F.invoice_payload == "donate_payload")
async def pre_checkout(query: PreCheckoutQuery):
    await query.answer(ok=True)


@dp.message(F.successful_payment)
async def successful_payment(message: types.Message):
    total = message.successful_payment.total_amount / 100
    await message.answer_photo(
        photo=THANKS_PHOTO_URL,
        caption=f"–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–Ω–∞—Ç ‚≠êÔ∏è {total:.2f} XTR! –í–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–µ—Å—Ü–µ–Ω–Ω–∞.",
        reply_markup=back_kb
    )


@dp.callback_query(F.data == "back")
async def callback_back(query: types.CallbackQuery):
    await query.message.edit_media(
        media=InputMediaPhoto(
            media=START_PHOTO_URL,
            caption=(f"–ü—Ä–∏–≤–µ—Ç, <b>User</b>! üëã\n\n"
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Capybara Marketplace\n\n"
        f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã, "
        f"–æ–±—â–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.\n\n"
        f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:")
        ),
        reply_markup=start_keyboard()
    )
    await query.answer()


async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
